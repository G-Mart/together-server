// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RoomResponse.proto

#ifndef PROTOBUF_RoomResponse_2eproto__INCLUDED
#define PROTOBUF_RoomResponse_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "data.pb.h"
#include "RoomData.pb.h"
// @@protoc_insertion_point(includes)

namespace RoomResponse {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_RoomResponse_2eproto();
void protobuf_AssignDesc_RoomResponse_2eproto();
void protobuf_ShutdownFile_RoomResponse_2eproto();

class ShowRoomListResponse;
class RoomPeopleListResponse;
class RoomInfoResponse;

// ===================================================================

class ShowRoomListResponse : public ::google::protobuf::Message {
 public:
  ShowRoomListResponse();
  virtual ~ShowRoomListResponse();

  ShowRoomListResponse(const ShowRoomListResponse& from);

  inline ShowRoomListResponse& operator=(const ShowRoomListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShowRoomListResponse& default_instance();

  void Swap(ShowRoomListResponse* other);

  // implements Message ----------------------------------------------

  ShowRoomListResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShowRoomListResponse& from);
  void MergeFrom(const ShowRoomListResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Data.List room_list = 1;
  inline bool has_room_list() const;
  inline void clear_room_list();
  static const int kRoomListFieldNumber = 1;
  inline const ::Data::List& room_list() const;
  inline ::Data::List* mutable_room_list();
  inline ::Data::List* release_room_list();
  inline void set_allocated_room_list(::Data::List* room_list);

  // @@protoc_insertion_point(class_scope:RoomResponse.ShowRoomListResponse)
 private:
  inline void set_has_room_list();
  inline void clear_has_room_list();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::Data::List* room_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_RoomResponse_2eproto();
  friend void protobuf_AssignDesc_RoomResponse_2eproto();
  friend void protobuf_ShutdownFile_RoomResponse_2eproto();

  void InitAsDefaultInstance();
  static ShowRoomListResponse* default_instance_;
};
// -------------------------------------------------------------------

class RoomPeopleListResponse : public ::google::protobuf::Message {
 public:
  RoomPeopleListResponse();
  virtual ~RoomPeopleListResponse();

  RoomPeopleListResponse(const RoomPeopleListResponse& from);

  inline RoomPeopleListResponse& operator=(const RoomPeopleListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoomPeopleListResponse& default_instance();

  void Swap(RoomPeopleListResponse* other);

  // implements Message ----------------------------------------------

  RoomPeopleListResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoomPeopleListResponse& from);
  void MergeFrom(const RoomPeopleListResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Data.List people_list = 1;
  inline bool has_people_list() const;
  inline void clear_people_list();
  static const int kPeopleListFieldNumber = 1;
  inline const ::Data::List& people_list() const;
  inline ::Data::List* mutable_people_list();
  inline ::Data::List* release_people_list();
  inline void set_allocated_people_list(::Data::List* people_list);

  // @@protoc_insertion_point(class_scope:RoomResponse.RoomPeopleListResponse)
 private:
  inline void set_has_people_list();
  inline void clear_has_people_list();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::Data::List* people_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_RoomResponse_2eproto();
  friend void protobuf_AssignDesc_RoomResponse_2eproto();
  friend void protobuf_ShutdownFile_RoomResponse_2eproto();

  void InitAsDefaultInstance();
  static RoomPeopleListResponse* default_instance_;
};
// -------------------------------------------------------------------

class RoomInfoResponse : public ::google::protobuf::Message {
 public:
  RoomInfoResponse();
  virtual ~RoomInfoResponse();

  RoomInfoResponse(const RoomInfoResponse& from);

  inline RoomInfoResponse& operator=(const RoomInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoomInfoResponse& default_instance();

  void Swap(RoomInfoResponse* other);

  // implements Message ----------------------------------------------

  RoomInfoResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoomInfoResponse& from);
  void MergeFrom(const RoomInfoResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .RoomData.RoomInfo room_info = 1;
  inline bool has_room_info() const;
  inline void clear_room_info();
  static const int kRoomInfoFieldNumber = 1;
  inline const ::RoomData::RoomInfo& room_info() const;
  inline ::RoomData::RoomInfo* mutable_room_info();
  inline ::RoomData::RoomInfo* release_room_info();
  inline void set_allocated_room_info(::RoomData::RoomInfo* room_info);

  // @@protoc_insertion_point(class_scope:RoomResponse.RoomInfoResponse)
 private:
  inline void set_has_room_info();
  inline void clear_has_room_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::RoomData::RoomInfo* room_info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_RoomResponse_2eproto();
  friend void protobuf_AssignDesc_RoomResponse_2eproto();
  friend void protobuf_ShutdownFile_RoomResponse_2eproto();

  void InitAsDefaultInstance();
  static RoomInfoResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// ShowRoomListResponse

// optional .Data.List room_list = 1;
inline bool ShowRoomListResponse::has_room_list() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShowRoomListResponse::set_has_room_list() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShowRoomListResponse::clear_has_room_list() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShowRoomListResponse::clear_room_list() {
  if (room_list_ != NULL) room_list_->::Data::List::Clear();
  clear_has_room_list();
}
inline const ::Data::List& ShowRoomListResponse::room_list() const {
  return room_list_ != NULL ? *room_list_ : *default_instance_->room_list_;
}
inline ::Data::List* ShowRoomListResponse::mutable_room_list() {
  set_has_room_list();
  if (room_list_ == NULL) room_list_ = new ::Data::List;
  return room_list_;
}
inline ::Data::List* ShowRoomListResponse::release_room_list() {
  clear_has_room_list();
  ::Data::List* temp = room_list_;
  room_list_ = NULL;
  return temp;
}
inline void ShowRoomListResponse::set_allocated_room_list(::Data::List* room_list) {
  delete room_list_;
  room_list_ = room_list;
  if (room_list) {
    set_has_room_list();
  } else {
    clear_has_room_list();
  }
}

// -------------------------------------------------------------------

// RoomPeopleListResponse

// optional .Data.List people_list = 1;
inline bool RoomPeopleListResponse::has_people_list() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoomPeopleListResponse::set_has_people_list() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoomPeopleListResponse::clear_has_people_list() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoomPeopleListResponse::clear_people_list() {
  if (people_list_ != NULL) people_list_->::Data::List::Clear();
  clear_has_people_list();
}
inline const ::Data::List& RoomPeopleListResponse::people_list() const {
  return people_list_ != NULL ? *people_list_ : *default_instance_->people_list_;
}
inline ::Data::List* RoomPeopleListResponse::mutable_people_list() {
  set_has_people_list();
  if (people_list_ == NULL) people_list_ = new ::Data::List;
  return people_list_;
}
inline ::Data::List* RoomPeopleListResponse::release_people_list() {
  clear_has_people_list();
  ::Data::List* temp = people_list_;
  people_list_ = NULL;
  return temp;
}
inline void RoomPeopleListResponse::set_allocated_people_list(::Data::List* people_list) {
  delete people_list_;
  people_list_ = people_list;
  if (people_list) {
    set_has_people_list();
  } else {
    clear_has_people_list();
  }
}

// -------------------------------------------------------------------

// RoomInfoResponse

// optional .RoomData.RoomInfo room_info = 1;
inline bool RoomInfoResponse::has_room_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoomInfoResponse::set_has_room_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoomInfoResponse::clear_has_room_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoomInfoResponse::clear_room_info() {
  if (room_info_ != NULL) room_info_->::RoomData::RoomInfo::Clear();
  clear_has_room_info();
}
inline const ::RoomData::RoomInfo& RoomInfoResponse::room_info() const {
  return room_info_ != NULL ? *room_info_ : *default_instance_->room_info_;
}
inline ::RoomData::RoomInfo* RoomInfoResponse::mutable_room_info() {
  set_has_room_info();
  if (room_info_ == NULL) room_info_ = new ::RoomData::RoomInfo;
  return room_info_;
}
inline ::RoomData::RoomInfo* RoomInfoResponse::release_room_info() {
  clear_has_room_info();
  ::RoomData::RoomInfo* temp = room_info_;
  room_info_ = NULL;
  return temp;
}
inline void RoomInfoResponse::set_allocated_room_info(::RoomData::RoomInfo* room_info) {
  delete room_info_;
  room_info_ = room_info;
  if (room_info) {
    set_has_room_info();
  } else {
    clear_has_room_info();
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace RoomResponse

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_RoomResponse_2eproto__INCLUDED
